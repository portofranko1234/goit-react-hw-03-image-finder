{"version":3,"sources":["Components/Searchbar/SearchBar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","App.js","Gofetch/FetchService.jsx","index.js"],"names":["Searchbar","className","onSubmit","event","props","type","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","onClick","e","modalFn","target","attributes","value","console","log","src","this","imageLink","alt","imageAlt","largeImageURL","defaultProps","ImageGallery","loader","imagesArray","map","image","idx","webformatURL","imagAlt","tags","id","propTypes","array","Button","fn","modalRoot","document","querySelector","Modal","handleKeyDown","code","closeFn","handleBackdrop","currentTarget","window","addEventListener","removeEventListener","createPortal","children","App","state","searchWords","images","showModal","modalImage","showLoader","currentPage","error","toggleModal","setState","pushImagesToState","response","newSearchArray","imagesFromResponse","data","hits","setModalImage","linkImg","openLargeImage","loaderToggle","bool","searchFormSubmit","preventDefault","searchWordsValue","getImages","reset","loadMoreFn","words","page","scrollHeight","documentElement","axios","get","API","then","prevState","scrollTo","top","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a63c2cbb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = { onSubmit: propTypes.func };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form\r\n          className=\"SearchForm\"\r\n          onSubmit={(event) => this.props.onSubmit(event)}\r\n        >\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  static defaultProps = { imageLink: \" \", imageAlt: \" \" };\r\n\r\n  static propTypes = {\r\n    imageLink: propTypes.string,\r\n    imageAlt: propTypes.string,\r\n    largeImageURL: propTypes.string,\r\n    modalFn: propTypes.func,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          onClick={(e) => {\r\n            this.props.modalFn(e.target.attributes[2].value);\r\n            console.log(e);\r\n          }}\r\n          src={this.props.imageLink}\r\n          alt={this.props.imageAlt}\r\n          data-large={this.props.largeImageURL}\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass ImageGallery extends Component {\r\n  static defaultProps = { imagesArray: propTypes.array };\r\n  static propTypes = {\r\n    loader: propTypes.func,\r\n    imagesArray: propTypes.array,\r\n    modalFn: propTypes.func,\r\n  };\r\n  componentDidMount() {\r\n    this.props.loader(true);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {this.props.imagesArray.map((image, idx) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              key={image.id}\r\n              imageLink={image.webformatURL}\r\n              imagAlt={image.tags}\r\n              largeImageURL={image.largeImageURL}\r\n              modalFn={this.props.modalFn}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass Button extends Component {\r\n  static propTypes = { fn: propTypes.func };\r\n\r\n  render() {\r\n    return (\r\n      <button className=\"Button\" type=\"button\" onClick={() => this.props.fn()}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  static propTypes = { closeFn: propTypes.func, loader: propTypes.func };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Modal componentdidMount\");\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.closeFn();\r\n    }\r\n  };\r\n  handleBackdrop = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.closeFn();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    console.log(\" Modal componentWillUnmount\");\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdrop}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport * as API from \"../src/Gofetch/FetchService\";\nimport Searchbar from \"./Components/Searchbar\";\nimport ImageGallery from \"./Components//ImageGallery/ImageGallery\";\nimport Button from \"./Components/Button\";\nimport Modal from \"./Components/Modal\";\n\nclass App extends Component {\n  state = {\n    searchWords: \"\",\n    images: [],\n    showModal: false,\n    modalImage: \"\",\n    showLoader: false,\n    currentPage: 1,\n    error: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  pushImagesToState = (response) => {\n    const imagesFromResponse = response.data.hits;\n    let newSearchArray = [];\n    newSearchArray = [...this.state.images, ...imagesFromResponse];\n    this.setState(({ images }) => ({ images: newSearchArray }));\n  };\n  setModalImage = (linkImg) => {\n    return this.setState(({ modalImage }) => ({ modalImage: linkImg }));\n  };\n  openLargeImage = (linkImg) => {\n    this.setModalImage(linkImg);\n    this.toggleModal();\n  };\n\n  loaderToggle = (bool) => {\n    return this.setState(({ showLoader }) => ({ showLoader: bool }));\n  };\n  getImages(words, page) {\n    let scrollHeight = 0;\n    if (page === 1) {\n      scrollHeight = 0;\n    } else {\n      scrollHeight = document.documentElement.scrollHeight + 144;\n    }\n    this.loaderToggle(true);\n    API.get(words, page).then((response) => {\n      this.pushImagesToState(response);\n      this.loaderToggle(false);\n      this.setState((prevState) => ({\n        currentPage: prevState.currentPage + 1,\n      }));\n\n      window.scrollTo({\n        top: scrollHeight,\n        behavior: \"smooth\",\n      });\n    });\n  }\n\n  searchFormSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      searchWords: \"\",\n      images: [],\n      showModal: false,\n      modalImage: \"\",\n      currentPage: 1,\n    });\n    const searchWordsValue = event.target[1].value;\n\n    this.setState({ searchWords: searchWordsValue });\n    const page = 1;\n    this.getImages(searchWordsValue, page);\n    event.target.reset();\n  };\n\n  loadMoreFn = () => {\n    this.loaderToggle(true);\n    this.getImages(this.state.searchWords, this.state.currentPage);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.showModal && (\n          <Modal closeFn={this.toggleModal} loader={this.loaderToggle}>\n            <img src={this.state.modalImage} alt=\"modal\" />\n          </Modal>\n        )}\n        <Searchbar onSubmit={this.searchFormSubmit} />\n\n        {this.state.searchWords !== \"\" && (\n          <ImageGallery\n            loader={this.loaderToggle}\n            imagesArray={this.state.images}\n            modalFn={this.openLargeImage}\n          ></ImageGallery>\n        )}\n        {this.state.showLoader && <Loader />}\n        {this.state.searchWords !== \"\" && <Button fn={this.loadMoreFn} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nconst API_BASIC_URL = \"https://pixabay.com/api/\";\r\nconst API_KEY = \"22486349-475ac57b79bf68bd3ecb1002b\";\r\nconst TYPE = \"photo\";\r\nconst ORIENTATION = \"horizontal\";\r\nconst PERPAGE = 12;\r\n\r\nexport const get = (words, page) => {\r\n  return axios.get(\r\n    `${API_BASIC_URL}?key=${API_KEY}&q=${words}&image_type=${TYPE}&page=${page}&orientation=${ORIENTATION}&per_page=${PERPAGE}`\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/styles.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}