{"version":3,"sources":["Searchbar/SearchBar.jsx","ImageGalleryItem/ImageGalleryItem.jsx","ImageGallery/ImageGallery.jsx","Button/Button.jsx","Modal/Modal.jsx","App.js","index.js"],"names":["Searchbar","className","onSubmit","event","props","type","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","onClick","modalFn","target","attributes","value","console","log","src","this","imageLink","alt","imageAlt","largeImageURL","defaultProps","ImageGallery","loader","imagesArray","map","image","idx","webformatURL","imagAlt","tags","id","propTypes","array","Button","window","scrollTo","top","document","documentElement","scrollHeight","behavior","fn","modalRoot","querySelector","Modal","handleKeyDown","code","closeFn","handleBackdrop","currentTarget","addEventListener","removeEventListener","createPortal","children","App","state","searchWords","images","showModal","modalImage","showLoader","currentPage","toggleModal","setState","pushImagesToState","response","newSearchArray","imagesFromResponse","data","hits","setModalImage","linkImg","openLargeImage","loaderToggle","bool","searchFormSubmit","preventDefault","searchWordsValue","getImages","reset","loadMoreFn","words","page","axios","get","then","prevState","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79d70046.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = { onSubmit: propTypes.func };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form\r\n          className=\"SearchForm\"\r\n          onSubmit={(event) => this.props.onSubmit(event)}\r\n        >\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  static defaultProps = { imageLink: \" \", imageAlt: \" \" };\r\n\r\n  static propTypes = {\r\n    imageLink: propTypes.string,\r\n    imageAlt: propTypes.string,\r\n    largeImageURL: propTypes.string,\r\n    modalFn: propTypes.func,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          onClick={(event) => {\r\n            this.props.modalFn(event.target.attributes[2].value);\r\n            console.log(event);\r\n          }}\r\n          src={this.props.imageLink}\r\n          alt={this.props.imageAlt}\r\n          data-large={this.props.largeImageURL}\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem/\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass ImageGallery extends Component {\r\n  static defaultProps = { imagesArray: propTypes.array };\r\n  static propTypes = {\r\n    loader: propTypes.func,\r\n    imagesArray: propTypes.array,\r\n    modalFn: propTypes.func,\r\n  };\r\n  componentDidMount() {\r\n    this.props.loader(true);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {this.props.imagesArray.map((image, idx) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              key={image.id}\r\n              imageLink={image.webformatURL}\r\n              imagAlt={image.tags}\r\n              largeImageURL={image.largeImageURL}\r\n              modalFn={this.props.modalFn}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass Button extends Component {\r\n  static propTypes = { fn: propTypes.func };\r\n\r\n  render() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n    return (\r\n      <button\r\n        className=\"Button\"\r\n        type=\"button\"\r\n        onClick={(event) => this.props.fn()}\r\n      >\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  static propTypes = { closeFn: propTypes.func, loader: propTypes.func };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Modal componentdidMount\");\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.closeFn();\r\n    }\r\n  };\r\n  handleBackdrop = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.closeFn();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    console.log(\" Modal componentWillUnmount\");\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdrop}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport Searchbar from \"./Searchbar\";\nimport ImageGallery from \"./ImageGallery\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\n\nconst apiKey = \"22486349-475ac57b79bf68bd3ecb1002b\";\n\nclass App extends Component {\n  state = {\n    searchWords: \"\",\n    images: [],\n    showModal: false,\n    modalImage: \"\",\n    showLoader: false,\n    currentPage: 1,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  pushImagesToState = (response) => {\n    const imagesFromResponse = response.data.hits;\n    let newSearchArray = [];\n    newSearchArray = [...this.state.images, ...imagesFromResponse];\n    this.setState(({ images }) => ({ images: newSearchArray }));\n  };\n  setModalImage = (linkImg) => {\n    return this.setState(({ modalImage }) => ({ modalImage: linkImg }));\n  };\n  openLargeImage = (linkImg) => {\n    this.setModalImage(linkImg);\n    this.toggleModal();\n  };\n\n  loaderToggle = (bool) => {\n    return this.setState(({ showLoader }) => ({ showLoader: bool }));\n  };\n\n  getImages(words, page) {\n    this.loaderToggle(false);\n    axios\n      .get(\n        `https://pixabay.com/api/?q=${words}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`\n      )\n      .then((response) => {\n        this.pushImagesToState(response);\n        this.loaderToggle(false);\n        this.setState((prevState) => ({\n          currentPage: prevState.currentPage + 1,\n        }));\n      });\n  }\n\n  searchFormSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      searchWords: \"\",\n      images: [],\n      showModal: false,\n      modalImage: \"\",\n      currentPage: 1,\n    });\n    const searchWordsValue = event.target[1].value;\n\n    this.setState({ searchWords: searchWordsValue });\n    const page = 1;\n    this.getImages(searchWordsValue, page);\n    event.target.reset();\n  };\n\n  loadMoreFn = () => {\n    this.loaderToggle(true);\n    this.getImages(this.state.searchWords, this.state.currentPage);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.showModal && (\n          <Modal closeFn={this.toggleModal} loader={this.loaderToggle}>\n            <img src={this.state.modalImage} alt=\"modal\" />\n          </Modal>\n        )}\n        <Searchbar onSubmit={this.searchFormSubmit} />\n\n        {this.state.searchWords !== \"\" && (\n          <ImageGallery\n            loader={this.loaderToggle}\n            imagesArray={this.state.images}\n            modalFn={this.openLargeImage}\n          ></ImageGallery>\n        )}\n        {this.state.showLoader && (\n          <Loader\n            className=\"spin\"\n            type=\"Bars\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n          />\n        )}\n        {this.state.searchWords !== \"\" && <Button fn={this.loadMoreFn} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/styles.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}